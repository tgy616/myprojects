<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tgy.pay.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.tgy.pay.entity.UserDO" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="login_id" property="loginId" jdbcType="VARCHAR" />
    <result column="login_pwd" property="loginPwd" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="reg_time" property="regTime" jdbcType="TIMESTAMP" />
    <result column="info" property="info" jdbcType="VARCHAR" />
    <result column="tag" property="tag" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, status, login_id, login_pwd, nickname, reg_time, info, tag
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.tgy.pay.entity.UserDO" >
    insert into user (id, status, login_id, 
      login_pwd, nickname, reg_time, 
      info, tag)
    values (#{id,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{loginId,jdbcType=VARCHAR}, 
      #{loginPwd,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, #{regTime,jdbcType=TIMESTAMP}, 
      #{info,jdbcType=VARCHAR}, #{tag,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.tgy.pay.entity.UserDO" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="loginId != null" >
        login_id,
      </if>
      <if test="loginPwd != null" >
        login_pwd,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="regTime != null" >
        reg_time,
      </if>
      <if test="info != null" >
        info,
      </if>
      <if test="tag != null" >
        tag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="loginId != null" >
        #{loginId,jdbcType=VARCHAR},
      </if>
      <if test="loginPwd != null" >
        #{loginPwd,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="regTime != null" >
        #{regTime,jdbcType=TIMESTAMP},
      </if>
      <if test="info != null" >
        #{info,jdbcType=VARCHAR},
      </if>
      <if test="tag != null" >
        #{tag,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tgy.pay.entity.UserDO" >
    update user
    <set >
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="loginId != null" >
        login_id = #{loginId,jdbcType=VARCHAR},
      </if>
      <if test="loginPwd != null" >
        login_pwd = #{loginPwd,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="regTime != null" >
        reg_time = #{regTime,jdbcType=TIMESTAMP},
      </if>
      <if test="info != null" >
        info = #{info,jdbcType=VARCHAR},
      </if>
      <if test="tag != null" >
        tag = #{tag,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tgy.pay.entity.UserDO" >
    update user
    set status = #{status,jdbcType=INTEGER},
      login_id = #{loginId,jdbcType=VARCHAR},
      login_pwd = #{loginPwd,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      reg_time = #{regTime,jdbcType=TIMESTAMP},
      info = #{info,jdbcType=VARCHAR},
      tag = #{tag,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>